# https://www.techrepublic.com/article/how-to-create-a-docker-image-and-push-it-to-docker-hub/
# https://medium.com/faun/how-to-build-a-docker-container-from-scratch-docker-basics-a-must-know-395cba82897b
#docker build -t zdm_docker -f ../zdm/dockers/zdm.docker .
#docker tag zdm_docker:latest profxj/zdm_docker:latest
#docker push profxj/zdm_docker:latest
# Testing: docker exec -it <container> /bin/bash

#FROM continuumio/anaconda3:latest

FROM nvidia/cuda:11.2.1-runtime-ubuntu20.04

# This and that. Mainly for data
ENV DEBIAN_FRONTEND="noninteractive" TZ="US"
RUN  apt-get update && \
     apt-get install -y tzdata && \
     apt-get install -y wget glances git 
#     curl https://rclone.org/install.sh | bash

# Code and storage
RUN  apt-get install -y git awscli

# Download and install Anaconda.
RUN apt-get update && apt-get install curl -y

# Miniconda
ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh \
    && mkdir /root/.conda \
    && bash Miniconda3-py38_4.9.2-Linux-x86_64.sh -b \
    && rm -f Miniconda3-py38_4.9.2-Linux-x86_64.sh 

# Other apt
RUN  apt-get update && \
     apt-get install -y vim

# gcc
RUN apt-get install -y build-essential     

# Storage
RUN  pip install smart-open[s3]

# Some basics
RUN  pip install ipython

# Some bigger packages
#RUN  pip install torch
#RUN  pip install scikit-learn
#RUN  pip install scikit-image
#RUN  pip install xarray
RUN  pip install pandas
RUN  pip install astropy
RUN  pip install pyarrow  
RUN  pip install astropy-healpix
RUN  pip install extension_helpers
RUN  pip install scipy
RUN  pip install matplotlib
RUN  pip install mpmath

# FRB
RUN git clone https://github.com/FRBs/FRB.git

# NE2001
RUN git clone https://github.com/FRBs/ne2001.git

# zdm
RUN git clone https://github.com/FRBs/zdm.git

# Other bits and dependencies
RUN cd ne2001; python setup.py develop
RUN cd .. 
RUN cd FRB; python setup.py develop
RUN cd ..
#  AVOID pip install -e for now!
RUN cd zdm; git pull; python setup.py develop
RUN cd zdm/zdm/src; gcc -shared -fPIC -o zdmlib.so zdmlib.c

# Test
#ENV ENDPOINT_URL="https://s3.nautilus.optiputer.net"

# Credentials
#COPY credentials /root/.aws/
